"basic config
"" General
set number  " Show line numbers
set linebreak   " Break lines at word (requires Wrap lines)
set showbreak=+++   " Wrap-broken line prefix
set textwidth=100   " Line wrap (number of cols)
set showmatch   " Highlight matching brace
set visualbell  " Use visual bell (no beeping)

set hlsearch    " Highlight all search results
set smartcase   " Enable smart-case search
set ignorecase  " Always case-insensitive
set incsearch   " Searches for strings incrementally

set autoindent  " Auto-indent new lines
set shiftwidth=4    " Number of auto-indent spaces
set smartindent " Enable smart-indent
set smarttab    " Enable smart-tabs
set softtabstop=4   " Number of spaces per Tab

"" Advanced
set ruler   " Show row and column ruler information

set undolevels=1000 " Number of undo levels
set backspace=indent,eol,start  " Backspace behaviour

set notitle
set laststatus=2
set statusline+=%F
map tt O<Esc>j
"" Generated by VimConfig.com



"vim plug
call plug#begin('~/.vim/plugged')

Plug 'airblade/vim-gitgutter'
Plug 'editorconfig/editorconfig-vim'
Plug 'itchyny/lightline.vim'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'mattn/emmet-vim'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-surround'
Plug 'w0rp/ale'
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'wolfgangmehner/c-support'
Plug '907th/vim-auto-save'
Plug 'Valloric/YouCompleteMe'
Plug 'chiel92/vim-autoformat'
Plug 'rhysd/vim-clang-format'
"Plug 'nathanaelkane/vim-indent-guides'
" 便签导航
Plug 'majutsushi/tagbar'
Plug 'vim-scripts/ctags.vim'
Plug 'morhetz/gruvbox'
Plug 'tpope/vim-fugitive'
call plug#end()


colorscheme  gruvbox

" nerdtree
set rtp+=~/.vim/plugged/nerdtree
autocmd vimenter * NERDTree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'cd '.argv()[0] | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
map <C-n> :NERDTreeToggle<CR>

let g:NERDTreeWinPos = "left"
let NERDTreeWinSize=31
let NERDTreeShowHidden=1


" autosave plugin

let g:auto_save = 1  " enable AutoSave on Vim startup
let g:auto_save_silent=1
let g:auto_save_no_updatetime = 1  " do not change the 'updatetime' option
let g:auto_save_events = ["CursorHold"]

" youcompleteme
" 配置文件
let g:ycm_global_ycm_extra_conf = '~/.vim/plugged/YouCompleteMe/.ycm_extra_conf.py'
" 接受补全后不分裂出一个窗口显示接受的项
set completeopt-=preview
" 在注释中也可以补全
let g:ycm_complete_in_comments=1
"lightline

let g:lightline = {
            \ 'active':{
            \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
            \'componment_function':{'gitbranch':'LightlineReadonly'},
            \ 'colorscheme': 'default',
            \ }
function! LightlineReadonly()
  return &readonly && &filetype !=# 'help' ? 'RO' : ''
endfunction

" format
noremap <C-l> :Autoformat<CR>

let g:Tlist_Ctags_Cmd='/usr/local/bin/ctags'

"ident tab
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1
set ts=4 sw=4 et

"c-support
let g:C_CCompiler  = 'cc'
let g:C_ExeExtension = ''
